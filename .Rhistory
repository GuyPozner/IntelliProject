a <- avialible.packages()
a <- available.packages()
print(a)
if birdring in a
if
birk
if "birk" in a
install.packages("slidify")
install.packages("ggplot2")
source("http://bioconductor.org/biocLite.R")
biocLine()
biocLite()
library(ggplot2)
search()
install.packages("KernSmooth")
library(KernSmooth)
print('hello')
print('Hello World')
clear
clc
getwd
getwd()
install.packages("swirl")
swirl()
library(jsonlite)
library(httpuv)
library(httr)
myapi <- oauth_app("github","3ef8edd3883b39be45bf", secret = "e955525bbc580ca52a274ba2c86a214649ce0f4d")
github_token <- oauth2.0_token(oauth_endpoints("github"),myapi)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
req
myj <- content(req)
myj2 <- jsonlite::fromJSON(toJSON(myj))
View(myj2)
View(myj2)
View(myj2)
View(myj2)
stop_for_status(req)
content(req)
mydat <- content(req)
view(mydat)
View(mydat)
myj2
names(myj)
myj2 <- fromJSON(myj)
myj2 <- fromJSON("https://api.github.com/users/jtleek/repos")
myj
names(myj2)
names(myj2$id)
names(myj2$owner)
names(myj2$owner$id)
names(myj2$owner$login)
names(myj2$owner)
req <- GET("https://api.github.com/rate_limit", gtoken)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
req
head(req)
?GET
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
req
print(req.2)
print(req,2)
print(req,20
)
req$date
req <- GET("https://api.github.com/users/jtleek/repos/datasharing", gtoken)
req
req <- GET("https://api.github.com/users/jtleek/datasharing", gtoken)
req
req <- GET("https://api.github.com/repos/jtleek/datasharing", gtoken)
req
myj <- content(req)
myj
myj2 <- jsonlite::fromjSON(toJSON(myj))
myj2 <- jsonlite::fromJSON(toJSON(myj))
myj2
myj2$created_at
swirl()
library(swirl)
swirl()
dim(ssd)
names(ssd[.562:563])
names(ssd[,562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, subject == 1)
dim(sub1)
names(sub1[,1:12])
myedit("showXY.R")
showMe(1:6)
mdist <- dist(sub[,1:3])
?dist
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)]))
svd1$u
dim(svd1$u)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub1[,c(10:12,maxCon)])
hclusteting <- hclust(mdist)
hclustering <- hclust(mdist)
mplyclust(hclustering, lab.col = unclass(sub1$activity))
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1[,-c(562,563)], centers = 6)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[,-c(562,563)], centers = 6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- which(kClust$size == 29)
plot(kClust$centers[laying,1:12], pch = 19,  ylab = "Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kClust$size == 49)
plot(kClust$centers[walkdown,1:12], pch = 19, ylab = "Walkdown Cluster")
rm(list = ls())
source('~/Documents/IntelliProject/Code/intelliLog.R')
source('~/Documents/IntelliProject/Code/intelliLog.R')
source('~/Documents/IntelliProject/Code/intelliLog.R')
source('~/Documents/IntelliProject/intelliLog.R')
source('~/Documents/IntelliProject/intelliLog.R')
this.dir <- dirname(parent.frame(2)$ofile)
parent.frame(2)$ofile
parent.frame(2)
names(parent.frame(2))
this.dir
setwd(this.dir)
source('~/Documents/IntelliProject/intelliLog.R')
setwd("~/Documents/IntelliProject")
this.dir
setwd(this.dir)
source('~/Documents/IntelliProject/intelliLog.R')
source('~/Documents/IntelliProject/intelliLog.R')
source('~/Documents/IntelliProject/intelliLog.R')
getwd()
setwd("/2015-02-15 09.43.52")
setwd("2015-02-15 09.43.52")
source('~/Documents/IntelliProject/intelliLog.R')
View(animals)
View(nosepokes)
View(visits)
a <- as.Date(visits$Start)
a[1]
a[2]
b <- as.POSIXct(visits$Start)
b[1]
b[2]
b[2]-b[1]
View(nosepokes)
class(nosepokes$VisitID)
class(nosepokes$Side)
class(visits$AnimalTag)
animals$AnimalName
animals$AnimalTag
source('~/Documents/IntelliProject/intelliLog.R')
a <- visits$AnimalTag == animals$AnimalTag
a <- visits$AnimalTag == as.numeric(animals$AnimalTag)
sum(a)
a <- animals$AnimalTag
b <- visits$AnimalTag
b[1]
b[2]
b[3]
animals$AnimalName
source('~/Documents/IntelliProject/intelliLog.R')
a <- as.factor(visits$AnimalTag)
a
rm(list = ls())
source('~/Documents/IntelliProject/intelliLog.R')
View(visits)
View(visits)
a <- as.factor(visits$AnimalTag)
View(animals)
levels(a) <- levels(as.factor(animals$AnimalTag))
a
levels(a) <- levels(as.factor(animals$AnimalName))
a
source('~/Documents/IntelliProject/intelliLog.R')
